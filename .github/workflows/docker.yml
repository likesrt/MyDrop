name: Build and Push Docker Images

on:
  push:
    tags:
      - '*'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build multi-arch and push to GHCR (main only)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Avoid Docker Hub anonymous pull limits when setup-buildx pulls moby/buildkit
      - name: Login & pre-pull BuildKit (Docker Hub)
        shell: bash
        run: |
          set -e
          if [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" && -n "${{ secrets.DOCKERHUB_TOKEN }}" ]]; then
            echo "Logging into Docker Hub to avoid pull rate limits..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker pull moby/buildkit:buildx-stable-1
          else
            echo "DOCKERHUB_* secrets not set; proceeding without Docker Hub login (may hit rate limits)."
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Use the same image we pre-pulled (still from Docker Hub)
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Metadata for main (public) â†’ package: ghcr.io/<owner>/<repo>
      - name: Docker meta (main)
        id: meta_main
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=main
            type=ref,event=tag

      - name: Build and push (main)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_main.outputs.tags }}
          labels: ${{ steps.meta_main.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
